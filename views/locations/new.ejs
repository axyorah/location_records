<% layout('layout/boilerplate.ejs') %>

    <div class="row">
        <div class="col-xl-8 offset-xl-2">

            <h1 class="my-5">Add New Location</h1>

            <form method="POST" action="/projects/<%= projectId %>/locations/new" class="needs-validation" novalidate>

                <div class="card w-100">
                    <div class="card-body" id="region-info">

                        <div class="form-box">
                            <label for="city[name]">Name</label>
                            <input class="form-control" type="text" id="city[name]" name="city[name]" required>
                        </div>

                        <div class="form-box">
                            <label for="city[code]">Code</label>
                            <input class="form-control" type="text" id="city[code]" name="city[code]" required>
                        </div>

                        <div class="form-box">
                            <label for="city[area]">Collection that the location belongs to</label>
                            <select class="form-control" id="city[area]" name="city[area]" required>
                                <option disabled selected value="">Select Collection</option>
                                <% for (let area of areas) { %>
                                    <option value="<%= area._id %>">
                                        <%= area.name %>
                                    </option>
                                <% } %>
                            </select>
                        </div>

                        <div class="form-box">
                            <p> Location</p>
                            <div id="map-nl" class="w-100" style="height: 250px;"></div>
                            <input class="form-control muted-text" type="hidden" id="city[lat]" name="city[lat]"
                                required>
                            <input class="form-control muted-text" type="hidden" id="city[lng]" name="city[lng]"
                                required>
                        </div>

                        <div class="form-box">
                            <label for="city[quickInfo]">Short note that will appear on mouse hover</label>
                            <textarea class="form-control" id="city[quickInfo]" name="city[quickInfo]"></textarea>
                        </div>

                        <div class="form-box">
                            <label for="city[generalInfo]">General Information</label>
                            <div id="city[generalInfo]"></div>
                        </div>

                    </div>
                </div>

                <div class="mt-3">
                    <button type="submit" class="btn btn-outline-secondary w-100">Submit</button>
                </div>
            </form>

        </div>
    </div>


    <script>
        // DOM
        const genInfoRootHtml = document.getElementById('city[generalInfo]');
        const latInpt = document.getElementById('city[lat]');
        const lngInpt = document.getElementById('city[lng]');

        const areaSelect = document.getElementById('city[area]');
        const areaOpts = areaSelect.getElementsByTagName('option');

        // DB        
        const areasJSON = '<%- JSON.stringify(areas) %>';
        const citiesJSON = '<%- JSON.stringify(cities) %>';
        const projectJSON = '<%- JSON.stringify(project) %>';

        const cities = JSON.parse(citiesJSON);
        const areas = JSON.parse(areasJSON);
        const project = JSON.parse(projectJSON);

        // text
        // area names have already been set, but might not be htmlified correctly
        // recall: areaOpts[0].innerHTML is 'Select Area'
        for (let i = 0; i < areas.length; i++) {
            areaOpts[i+1].innerHTML = jsonHtmlify(areas[i].name);
        }
        showGenInfoInit(genInfoRootHtml);
        //showGenInfoInitForEdit('', genInfoRootHtml);

        // map
        const mapBoxToken = '<%= process.env.MAPBOX_TOKEN %>';
        mapboxgl.accessToken = mapBoxToken;

        const mu = new MapUtils('map-nl', project);
        mu.populateMapWithCitiesOnEvent(areas, 'load');
        mu.addNewMarkerToMapOnEvent('click');
        mu.addNewMarkerCoordinatesToFormOnEvent(latInpt, lngInpt, 'click');
        mu.removeLastMarkerOnKey('Escape');
    </script>