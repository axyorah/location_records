<% layout('layout/boilerplate.ejs') %>

    <div class="row">
        <div class="col-xl-8 offset-xl-2">

            <h1 class="my-5">Edit Location</h1>

            <form method="POST" action="/projects/<%= projectId %>/locations/<%= selected._id %>/edit" class="needs-validation" novalidate>

                <div class="card w-100">
                    <div class="card-body" id="region-info">

                        <div class="form-box">
                            <label for="location[name]">Name</label>
                            <input class="form-control" type="text" 
                                id="location[name]" name="location[name]" 
                                value="<%= selected.name %>" required>
                        </div>

                        <div class="form-box">
                            <label for="location[code]">Code</label>
                            <input class="form-control" type="text" 
                                id="location[code]" name="location[code]" 
                                value="<%= selected.code %>" required>
                        </div>

                        <div class="form-box">
                            <label for="location[area]">Collection that the location belongs to</label>
                            <select class="form-control" id="location[area]" name="location[area]" required>
                                <option disabled value="">Select Collection</option>
                                <% for (let collection of collections) { %>
                                    <% if (collection._id.toString() === selected.area.toString()) { %>
                                        <option selected value="<%= collection._id %>">
                                            <%= collection.name %>
                                        </option>
                                    <% } else { %>
                                        <option value="<%= collection._id %>">
                                            <%= collection.name %>
                                        </option>
                                    <% } %>
                                <% } %>
                            </select>
                        </div>

                        <div class="form-box">
                            <p>Location</p>
                            <div id="map-nl" class="w-100" style="height: 250px;"></div>
                            <input class="form-control muted-text" type="hidden" 
                                id="location[lat]" name="location[lat]" value="<%= selected.geometry.coordinates[1]%>"
                                required>
                            <input class="form-control muted-text" type="hidden" 
                                id="location[lng]" name="location[lng]" value="<%= selected.geometry.coordinates[0]%>"
                                required>
                        </div>

                        <div class="form-box">
                            <label for="location[quickInfo]">Short note that will appear on mouse hover</label>
                            <textarea class="form-control" id="location[quickInfo]" name="location[quickInfo]"
                                ><%= selected.quickInfo %></textarea>
                        </div>

                        <div class="form-box">
                            <label for="location[General Information]">General Information</label>
                            <div id="location[General Information]"></div>
                        </div>

                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-2">
                        <a class="btn btn-outline-secondary" href="/projects/<%= projectId %>">Cancel</a>
                    </div>
                    <div class="col-6 offset-1 col-sm-8 offset-sm-0">
                        <button type="submit" class="btn btn-outline-secondary w-100">Submit</button>
                    </div>
                </div>

            </form>

            <form method="POST" action="/projects/<%= projectId %>/locations/<%= selected._id %>/delete?_method=DELETE" 
                id="misplaced-delete-form">
                <button type="submit" class="btn btn-outline-danger">Delete</button>
            </form>

        </div>
    </div>


    <script>
        // DOM
        const nameHtml = document.getElementById('location[name]');
        const codeHtml = document.getElementById('location[code]');
        const quickInfoHtml = document.getElementById('location[quickInfo]');
        const genInfoRootHtml = document.getElementById('location[General Information]');

        const latInpt = document.getElementById('location[lat]');
        const lngInpt = document.getElementById('location[lng]');
        
        const collectionSelect = document.getElementById('location[area]');
        const collectionOpts = collectionSelect.getElementsByTagName('option');

        // DB
        const selectedJSON = '<%- JSON.stringify(selected) %>';  
        //const locationsJSON = '<%- JSON.stringify(locations) %>';      
        const collectionsJSON = '<%- JSON.stringify(collections) %>';
        const projectJSON = '<%- JSON.stringify(project) %>';

        const selected = JSON.parse(selectedJSON);
        //const locations = JSON.parse(locationsJSON);
        const collections = JSON.parse(collectionsJSON);
        const project = JSON.parse(projectJSON);

        // text
        // unescape (textify) db entry for <input type="text"> elements;
        nameHtml.value = jsonTextify(selected.name);
        codeHtml.value = jsonTextify(selected.code);
        // set db entries as .innerHTML for <textarea> elements;
        quickInfoHtml.innerHTML = selected.quickInfo;        
        // area names have already been set, but might not be htmlified correctly
        // recall: areaOpts[0].innerHTML is 'Select Area'
        for (let i = 0; i < collections.length; i++) {
            collectionOpts[i+1].innerHTML = jsonHtmlify(collections[i].name);
        }
        // 'General Information' is handled separately
        //showGenInfoInit(genInfoRootHtml);
        showGenInfoInitForEdit(selected['General Information'], genInfoRootHtml);

        // map
        const mapBoxToken = '<%= process.env.MAPBOX_TOKEN %>';
        mapboxgl.accessToken = mapBoxToken;

        const mu = new MapUtils('map-nl', project);
        mu.populateMapWithLocationsOnEvent(collections, 'load');

        mu.removeLocationFromSourcesOnEvent(selected, collections, 'load'); // instead of a circle we'll add movabel marker
        mu.addMarkerAtLngLatToMapOnEvent(selected.geometry.coordinates, 'load');

        mu.addNewMarkerToMapOnEvent('click');
        mu.addNewMarkerCoordinatesToFormOnEvent(latInpt, lngInpt, 'click');
        mu.removeLastMarkerOnKey('Escape');

    </script>